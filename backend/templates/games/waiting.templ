package games

import (
	"stockmarket/models"
    userTemplates "stockmarket/templates/users"
	"strconv"
)


templ PeriodCountOptionStyles(){
    <style>
        .btn-check .btn {
            border-radius: 0 !important;
            border: 1px solid var(--bs-primary) !important;
        }
        .btn-check:checked+.btn {
            background-color: var(--bs-primary) !important;
            color: black;
        }
    </style>
}

templ PeriodCountOptions(game models.Game, errMsg string) {
    <input type="hidden" name="gameID" value={game.ID}/>
    <span>
        <input type="radio" class="btn-check" name="game-length" id="option1" autocomplete="off" value="0" checked?={game.PeriodCount == 0}/>
        <label class="btn bg-dark" for="option1">{models.GamePeriodCountDisplay(0)}</label>
    </span>
    
    <span>
        <input type="radio" class="btn-check" name="game-length" id="option2" autocomplete="off" value="1" checked?={game.PeriodCount == 1}/>
        <label class="btn bg-dark" for="option2">{models.GamePeriodCountDisplay(1)}</label>
    </span>

    <span>
        <input type="radio" class="btn-check" name="game-length" id="option3" autocomplete="off" value="2" checked?={game.PeriodCount == 2}/>
        <label class="btn bg-dark" for="option3">{models.GamePeriodCountDisplay(2)}</label>
    </span>
    if errMsg != "" {
        <p>
            <em>
                {errMsg}
            </em>
        </p>
    }
}

templ PeriodCountOptionsSocket(game models.Game){

	<div hx-swap-oob="innerHTML:#game-difficulty">
		{models.GamePeriodCountDisplay(game.PeriodCount)}
	</div>
}

templ WaitingLoading(){
    <button href="/" class="btn btn-secondary w-100" style="max-width: 14rem;" disabled>
        Loading...
    </button>
    <button type="submit" class="btn btn-primary w-100" style="max-width: 14rem;" disabled>
        Loading...
    </button>
}

templ Waiting(game models.Game, players []models.Player, currentUserID uint) {
	<div class="container-fluid rounded text-center d-flex flex-column justify-content-center" style="width: 95vw; height: 95vh;">
        <p>Lobby code:</p>
		<h2 class="primary">{ game.ID }</h2>
		<p>Waiting for players to join ({ strconv.Itoa(len(players)) } / 6)</p>

        <div style="min-height: 11em;" id="player-list" class="d-flex flex-row justify-content-center gap-3 p-2 ">
            @userTemplates.CardList(players)
        </div>
        
		<div class="py-3">
			<p class="pb-2">Game length</p>
            
            if game.CurrentUserID == currentUserID {
                <form 
                    hx-post="/api/games/difficulty" 
                    hx-trigger="change" 
                    hx-swap="innerHTML" 
                    hx-target="#difficulty-options-setter"
                >
                    @PeriodCountOptionStyles()
                    <div class="radio-row" id="difficulty-options-setter">
                        @PeriodCountOptions(game, "")
                    </div>
                </form>
            } else {
                <div class="btn bg-dark" id="game-difficulty">
                    { models.GamePeriodCountDisplay(game.PeriodCount) }
                </div>
            }

		</div>

        <div class="py-3">
            <p class="pb-2">Launch game when all players have joined</p>
            <div id="game-actions" class="d-flex flex-row w-100 justify-content-center gap-3">
                <a href="/" class="btn btn-secondary w-100" style="max-width: 14rem;">
                    Back
                </a>
                if game.CurrentUserID == currentUserID {
                    <form 
                        style="max-width: 14rem;" 
                        class="w-100" 
                        hx-post="/api/games/start"
                        hx-trigger="submit" 
                        hx-swap="innerHTML"
                        hx-target="#game-actions"
                    >
                        <input type="hidden" name="gameID" value={ game.ID }/>
                        <button type="submit" class="btn btn-primary w-100">
                            Launch Game
                        </button>
                    </form>
                }
            </div>
        </div>
		
	</div>
}
